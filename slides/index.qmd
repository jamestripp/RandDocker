---
title: "R and Docker"
subtitle: "Warwick R User Group"
author: "James Tripp"
execute: 
  enabled: false
institute: Senior Research Software Engineer, IT Services (University of Warwick)
format: 
    revealjs:
        theme: [default, css/warwick.scss, css/warwick-fonts.scss]
        footer: https://jamestripp.github.io/RandDocker/
        transition: none
        background-transition: fade
bibliography: references.bib
---

# Who am I?

::: columns
::: {.column width="50%"}
![](images/james.png){fig-alt="James Tripp" fig-align="left" width="250"}

**James Tripp**

*Research Software Engineer*

[james.tripp\@warwick.ac.uk](mailto:james.tripp@warwick.ac.uk){.email}
:::

::: {.column width="50%"}
::: incremental
-   Researcher in Cognitive Science
-   Senior Academic Technologist \@ [Interdisciplinary Centre](https://warwick.ac.uk/fac/cross_fac/cim/)
-   Senior Research Software Engineer \@ [IT Services](https://warwick.ac.uk/fac/arts/research/digitalhumanities/team/)
:::
:::
:::

# Plan

-   Why?
-   Docker?
-   Next Steps

# Why?

## Developers

-   Software developers sometimes wrote code which only ran on their machine
-   That could be a problem

. . .

![](images/works_on_my_machine.jpeg){fig-align="center"}

## Developers

![](images/docker_born.png){fig-align="center"}

## Developers

::: columns
::: {.column width="50%"}
-   Developers could build and update *images*
-   *Images* are stored in a registry
-   Production servers download *images*
-   Copies of these *images* called *containers* are used in production
:::

::: {.column width="50%"}
![](images/moby-logo.png){fig-align="center" width="400"}
:::
:::

## Researchers

How does this help research?

. . .

-   Aids computational reproducibility [@boettiger2015]

. . .

-   Allows other to run code without having to install lots of dependencies [@eglen2017a]

. . .

-   Language agnostic and used widely [@pittard2020]

. . .

-   Provides the basis for technologies like the research compendium [@marwick2018], binder [@getstar] and dev containers [@smith2022]

# Docker {background-color="#2780e3"}

## What?

![](images/d6.png)

## What?

![](images/d5.png)

## What?

![](images/d4.png)

## What?

![](images/d3.png)

## What?

![](images/d2.png)

## What?

![](images/d1.png)

## R images on DockerHub

. . .

-   The R project has an [official r-base image](https://hub.docker.com/_/r-base/)

. . .

-   [Rocker Project](https://rocker-project.org/images/) has lots of images:

. . .

    -   rocker/r-ver - alternative to r-base
    -   rocker/rstudio - R and RStudio
    -   rocker/tidyverse- R and tidyverse packages
    -   rocker/shiny - Shiny server built in
    -   many others

## Base image

To use the official image

```{bash}
docker run --rm -ti r-base
```

. . .

::: columns
::: {.column width="50%"}
![](images/r-base.png){fig-align="center"}
:::

::: {.column width="50%"}
1.  The r-base image downloaded

2.  Container created from image

3.  Terminal enters container
:::
:::

. . .

::: {.callout-note appearance="simple"}
The command line options are to remove the container on exit (-rm) and to create a command line interface with interactivity (-ti)
:::

## RStudio image

```{bash}
docker run --rm -ti -e DISABLE_AUTH="true" -p 8787:8787 rocker/rstudio
```

. . .

::: columns
::: {.column width="50%"}
![](images/rstudio_container.png)
:::

::: {.column width="50%"}
-   Downloads image, creates and terminal enters container

-   The container provides access to RStudio via localhost:8787

-   You now have an isolated RStudio container running
:::
:::

. . .

::: {.callout-note appearance="simple"}
Command line options are remove the container on exit (-rm), create a command line interface (-ti), set environment variables (-e) and set the port (-p) so that connecting via port 8787 will connect to port 8787 in the container.
:::

## Custom images

-   Docker images are created from dockerfiles. A sample dockerfile is below[^1].

[^1]: Sample taken from <https://hub.docker.com/_/r-base/>

. . .

``` {.text code-line-numbers="1-4|1|2|3|4|1-4"}
FROM r-base
COPY . /usr/local/src/myscripts
WORKDIR /usr/local/src/myscripts
CMD ["Rscript", "myscript.R"]
```

. . .

-   To build the image, go to the folder containing the dockerfile and run.

```{bash}
docker build -t jamestripp/myimage .
```

. . .

-   Finally, to create a container and jump into it.

```{bash}
docker run --rm -ti jamestripp/myimage
```

. . .

::: {.callout-note appearance="simple"}
-   You can publish images to the Docker Hub (or another registry) for others to use (see instructions [here](https://jsta.github.io/r-docker-tutorial/04-Dockerhub.html) and [here](https://docs.docker.com/docker-hub/))
:::

## Local files

-   Copying files when the image is created. Baked into the image.

``` {.text code-line-numbers="2-3"}
FROM r-base
COPY . /usr/local/src/myscripts
WORKDIR /usr/local/src/myscripts
CMD ["Rscript", "myscript.R"]
```

. . .

-   Volumes are folders on your local file system which are accessible to a container

```{bash}
# MacOS and Linux
docker run --rm -ti -e DISABLE_AUTH="true" -p 8787:8787 -v  $(pwd):/home/rstudio/data rocker/rstudio
# Windows
docker run --rm -ti -e DISABLE_AUTH="true" -p 8787:8787 -v  absolute_path:/home/rstudio/data rocker/rstudio
#May work on Windows
docker run --rm -ti -e DISABLE_AUTH="true" -p 8787:8787 -v  %cd%:/home/rstudio/data rocker/rstudio
```

Where absolute_path is the full Windows path

# Example

## Fortune

myscript.R

```{text}
library(fortunes)

print(fortune())
print(fortune())
```

dockerfile

```{text}
FROM r-base
COPY . /usr/local/src/myscripts
WORKDIR /usr/local/src/myscripts
RUN ["install2.r", "fortune"]
CMD ["Rscript", "myscript.R"]
```

Build and run it

```{bash}
docker build -t jamestripp/fortune .
docker run --rm -ti jamestripp/fortune
```

## Fortune

![](images/fortune_example.png)

## Other examples

. . .

-   [RMarkdown](https://jlintusaari.net/how-to-compile-r-markdown-documents-using-docker/)

. . .

-   [Shiny apps](https://github.com/rsangole/user2022-r-for-docker/tree/main/04-docker-and-r/05-deploy-shiny-in-docker)

. . .

-   [Deploying models](https://github.com/rsangole/user2022-r-for-docker/tree/main/04-docker-and-r/04-deploy-models-in-docker)

## To consider

. . .

-   Changes in the base image can influence the images build upon them
-   Ensure you use trustworthy images such as Rocker [@boettiger2017]

. . .

-   Smaller images with very little software may be preferable as these are easier to maintain [@gruening2019]

. . .


-   Containers are, perhaps, only part of a reproducible workflow[@mölder2021; @gruening2019a]
-   Do we need to replicate the entire computing environment? Perhaps automagic or renv, which captures the R version and libraries, is all we need... (see the previous [WRUG presentation by Carlos Camara Menoyo](https://ccamara.github.io/wrug-depedencies/slides.html#1))

# Next steps

## Learning materials

. . .

-   Look through the [R Blogger posts on Docker](https://cse.google.com/cse?cx=005359090438081006639%3Apaz69t-s8ua&ie=UTF-8&q=docker&sa=Go&bIDiEKaSr=%5BNwX%5DavgpyM&JtlBfjh=JlitU.M3&BNXYvMTtg=m6Py%40WO3Y0u&bIDiEKaSr=%5BNwX%5DavgpyM&JtlBfjh=JlitU.M3&BNXYvMTtg=m6Py%40WO3Y0u&bIDiEKaSr=%5BNwX%5DavgpyM&JtlBfjh=JlitU.M3&BNXYvMTtg=m6Py%40WO3Y0u)

. . .

-   Work through the UserR2022 workshop by rsangole ([repo](https://github.com/rsangole/user2022-r-for-docker), [blog post](https://www.r-bloggers.com/2022/06/user2022-best-practicesfor-shiny-apps-with-docker-and-more/))

. . .

-   Read through the docker section in the [DevOps for Data Science](https://do4ds.com/chapters/sec1/docker.html) book

## Papers

. . .

-   Some R packages are mentioned in @nüst2020c. I was not able to get these packages working
    -   [Stevedore](https://github.com/richfitz/stevedore) - Sends commands to Docker. Required reticulate and the Python docker module. Recieved the error 'Did not find required python module 'docker''. Issue reported and not addressed in the past year...

    -   [Dockyard](https://github.com/thebioengineer/dockyard) - Aims to help you create and run a container. Last commit was 3 years ago and the example code on the github page does not work...

    -   [Dockermachine](https://github.com/cboettig/dockermachine) - Last updated 5 years ago.
    
. . .

-   @nüst2020 outlines 10 rules for creating dockerfiles, talks about good practice and sign posts other tools

. . .

-   @peikert2021 offer a workflow for rendering markdown documents which includes a make file for dependencies

-   Not an exhaustive list

## Tools

::: columns
::: {.column width="50%"}
[**Binder**](https://github.com/binder-examples/r)

Run a docker container on a remote server. Place a button on your public github repo README.md.

![](images/binder-repo.png)

:::

::: {.column width="50%"}
[**ShinyProxy**](https://www.shinyproxy.io/)

Spins up shiny containers with one container per user (see the [R Bloggers post](https://www.r-bloggers.com/2019/11/deploying-r-shiny-apps-using-shinyproxy-on-windows-10-2/))

![](images/shinyproxy.png)

:::
:::

# Questions?

# References
